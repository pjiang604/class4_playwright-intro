import { test, expect } from '@playwright/test';

var homePage = 'http://localhost:3000'
var aboutPage = 'http://localhost:3000/about'
var gradesPage = 'http://localhost:3000/grades'

test.beforeAll(async () => { //these yellow tags BeforeAll are built in methods. We're using something from Playwright to help us run these tests. Before anything runs, beforeAll means that this runs first. 
    console.log('Before tests');
})

test.afterAll(async () => { //after all the tests are done, then afterAll runs. 
    console.log('After tests');
})

test.describe('Head tag area', () => { //These tests runs after beforeAll but before afterAll. Here, describe this section of test "head tag area'. Groups all the tests in this section. "
    test('Contains the Head tag and its contents', async ({ page }) => { //from this page go to
        await page.goto(homePage); //go to home page

        await expect(page).toHaveTitle("Example #1"); //at the home page, we expect these results

        const metaDescription = page.locator('meta[name="description"]');
        await expect(metaDescription).toHaveAttribute('content', 'Generated by create next app')

        const linkIcon = page.locator('link[rel="icon"]');
        await expect(linkIcon).toHaveAttribute('href', '/favicon.ico')
    })
})

test.describe("Main content tests", () => {
    test('Should contain a heading welcome to the home page', async ({ page }) => { //async means we are waiting for a result. Don't run everything at once, wait until something is loaded on the screen. Based on page, it goes to the homepage and runs tests
        await page.goto(homePage);

        await expect(page.locator('h1')).toContainText('Welcome to my home page'); //page.locator finds a specific tag like h1
    })

    test('Should contain a list to describe CRUD', async ({ page }) => {
        await page.goto(homePage);
        await expect(page.locator('ul > li')).toContainText(['Create', 'Read', 'Update', 'Delete'])
    })

})

test.describe('Linking to another page', () => {
    test('Should contain a link to about page', async ({ page }) => {
        await page.goto(homePage)
        await page.click("text=About Page")

        await expect(page).toHaveURL(aboutPage);
    })

    test('Should contain a link to grades page', async ({ page }) => {
        await page.goto(homePage)
        await page.click("text=Grades Page")

        await expect(page).toHaveURL(gradesPage);
    })
})

test.describe('Button tests', () => {
    test('This is the info component', async ({ page }) => {
        await page.goto(homePage);

        await expect (page.locator('button')).toContainText("View all this info")
    })
})

test.describe('Footer tests', () => {
    test('should containa a footer on the home page', async ({ page }) => {
        await page.goto(homePage);

        await expect(page.locator('Footer')).toContainText("In class Example #1")
    })
})

test.describe('Check About page navigates to home page', () => {
    test('Should navigate to the home page from the about page', async ({ page }) => {
        await page.goto(aboutPage);

        await page.click('text=Go Back')

        await expect(page).toHaveURL(homePage)
    })
})
